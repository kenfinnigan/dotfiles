#!/bin/bash
cd "$HOME"

system_type=$(uname -s)

# Bootstrap MacOS
if [ "$system_type" = "Darwin" ]; then

  # Install XCode Command Line Tools (CLT)
  echo "XCode Command Line Tools (CLT)"
  xcode-select --install &> /dev/null
  
  # Ensure your MacOS is up to date
  echo "Updating MacOS"
  softwareupdate --all --install --force

  # Install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  # Install/update brew bundle
  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew update
    brew doctor
    brew upgrade  # Ensure all packages are upgraded
    brew cleanup --prune=14
    brew bundle --file="$HOME/.Brewfile"
  fi
  
  # Enable and use the brew-managed ZSH
  if ! grep -Fxq "$(brew --prefix)/bin/zsh" /etc/shells; then
    sudo cp /etc/shells /etc/shells.default
    echo "$(brew --prefix)/bin/zsh" | sudo tee -a /etc/shells
  fi

  if [ "$SHELL" != "$(brew --prefix)/bin/zsh" ]; then
    chsh -s $(brew --prefix)/bin/zsh
  fi

  # Setup iTerm2
  if [ -d "$HOME/.config/iterm2" ]; then
    echo "Setting iTerm preference folder"
    defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "$HOME/.config/iterm2"
    defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
    defaults write com.googlecode.iterm2 NoSyncNeverRemindPrefsChangesLostForFile -bool true
    defaults write com.googlecode.iterm2 NoSyncNeverRemindPrefsChangesLostForFile_selection -bool true
  fi

  # Set default applications for known extensions.
  # Application names can be found using the mdls command, e.g.
  # mdls -name kMDItemCFBundleIdentifier -r  /Applications/Visual\ Studio\ Code.app
  duti -s com.microsoft.VSCode yaml all
  duti -s com.microsoft.VSCode yml all
  duti -s com.microsoft.VSCode json all

  # Ensure proper permissions for ZSH shared directories
  # Use `compaudit` to verify
  chmod -R go-w "$(brew --prefix)/share"
fi

# ZSH Configuration
mkdir -p "$HOME/.zinit"
if [ ! -d "$HOME/.zinit/bin" ]; then
  echo "Bootstrap zinit"
  git clone https://github.com/zdharma-continuum/zinit.git "$HOME/.zinit/bin"
fi

# ZSH Upgrades
echo "Upgrade zinit"
zsh -c '. $HOME/.zshrc && zinit self-update'
echo "Upgrade zsh plugins"
zsh -c '. $HOME/.zshrc && zinit update --parallel'

# Create SSH configuration directory
mkdir -p  "$HOME/.ssh" "$HOME/.ssh/config.d" "$HOME/.ssh/sockets"
chmod 700 "$HOME/.ssh" "$HOME/.ssh/config.d" "$HOME/.ssh/sockets"

# Bootstrap Go
if command -v go >/dev/null 2>&1; then
  echo "Bootstrapping Go"
  if [ ! -d "$HOME/go" ]; then
    mkdir $HOME/go
    mkdir -p $HOME/go/bin $HOME/go/pkg $HOME/go/src
  fi
fi

# Install Visual Studio Code Plugins
if [ -f "$HOME/.vscode-extensions" ]; then
  if command -v code >/dev/null 2>&1; then
    echo "Installing visual studio code plugins"
    cat "$HOME/.vscode-extensions" | xargs -n 1 code --force --install-extension
  fi
fi
